206:     @vals = split " ", $comment;
207:     $ntemp = @vals[0];      # no. flow elements or channels
208:     $ksflag = @vals[1];     # 0: hold hydraulic conductivity constant
215:       @descriptors = split "'", $record;
216:       print "@descriptors[1]   ";                # slid: Road, Fill, Forest
217:       print "<br>Soil texture: @descriptors[3]\n";    # texid: soil texture
218:       ($nsl,$salb,$sat,$ki,$kr,$shcrit,$avke) = split " ", @descriptors[4];
219:#      @vals = split " ", @descriptors[4];
321:       @args = (".\\wepp <$responseFile >$stoutFile");
324:       @args = ("../wepp <$responseFile >$stoutFile 2>$sterrFile");
326:     print "@args
355:#    @args = ("nice -20 ./wepp <$responseFile >$stoutFile 2>$sterrFile");
357:       @args = (".\\wepp <$responseFile >$stoutFile");
360:       @args = ("../wepp <$responseFile >$stoutFile 2>$sterrFile");
362:     system @args;
409:   @selected_ranks = (5,10,20,50);
436:           @max_run[$yr] = $keep;
437:           @run_off[$yr] = $runoff;
446:        @max_run[$yr] = $keep;
447:        @run_off[$yr] = $runoff;
456:      @max_run[$yr] = $keep;
457:      @run_off[$yr] = $runoff;
463:  if ($debug) {print TEMP "\n",@run_off,"\n";}
469:  for $i (0..$years) {@indx[$i]=$i}	# set up initial index into array
483:#  for $i (0..$years) {print TEMP @run_off[$indx[$i]],"  "}
485:#  for $i (0..$years) {print TEMP @max_run[$indx[$i]]}
487:print TEMP "<p>Runoff events range from ",@run_off[$indx[0]]," down to ",@run_off[$indx[$years]]," mm\n";
492:    @selected_ranks[$i] -= 1;			# account for base zero
493:    ($day,$month,$year,$precip,$runoff,$rest) = split ' ', @max_run[$indx[$selected_ranks[$i]]], 6;
496:    @sed_delivery[$i] = $sed_del;
497:    @precip[$i] = $precip;
498:    @day[$i] = $day;
499:    @month[$i] = $month;
500:    @selected_year[$i] = $year;
501:    @previous_year[$i] = $year-1;
504:#print TEMP "@selected_ranks\n";
506:    ($max_day,$max_month,$max_year,$max_precip,$runoff,$rest) = split ' ', @max_run[@indx[0]], 6;
510:   @monthnames = ('', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');
521:         <td align=right>@run_off[$indx[0]]</td>
524:         <td>@monthnames[$max_month] $max_day, $max_year</td></tr>
527:   @color[0]="'#ff33ff'"; @color[1]="'#ff66ff'"; @color[2]="'#ff99ff'";
528:   @color[3]="'#ffaaff'"; @color[4]="'#ffccff'"; @color[5]="'#ffddff'";
531:      print TEMP '<tr><th bgcolor=',@color[$i],'>',@selected_ranks[$i] + 1,' (',100/(@selected_ranks[$i] + 1),"- year)</td>
532:             <td align=right>@run_off[$indx[@selected_ranks[$i]]]</td>
533:             <td align=right>@sed_delivery[$i]</td>
534:             <td align=right>@precip[$i]</td>
535:             <td align=right>@monthnames[@month[$i]]  @day[$i], @selected_year[$i]</td></tr>
539:    ($min_day,$min_month,$min_year,$min_precip,$runoff,$rest) = split ' ', @max_run[@indx[$years]], 6;
545:       <td align=right>@run_off[$indx[$years]]</td>
548:       <td>@monthnames[$min_month] $min_day, $min_year</td></tr>
551:@years2run = sort numerically @selected_year, @previous_year;
552:print TEMP "\nYears to run: @years2run\n";
559:    $year_count += 1 if (@years2run[$i] ne @years2run[$i-1]);
586:  $beg_year = @years2run[0];
598:    $thisyear = @years2run[$i];
666:#  @month = (5,12,1,12);
667:#  @day = (1,23,25,2);
668:#  @selected_year = (12,59,62,60);
672:   @monthnames = ('', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');
683:   @probClimate = (0.075, 0.075, 0.20, 0.65);	# rank 5, rank 10, rank 20, rank 50
684:   @probSoil0 = (0.10, 0.20, 0.40, 0.20, 0.10); # year 0
685:   @probSoil1 = (0.30, 0.30, 0.20, 0.19, 0.01); # year 1
686:   @probSoil2 = (0.50, 0.30, 0.18, 0.01, 0.01); # year 2
687:   @probSoil3 = (0.60, 0.30, 0.08, 0.01, 0.01); # year 3
688:   @probSoil4 = (0.70, 0.27, 0.01, 0.01, 0.01); # year 4
690:     @severe = ("hhh", "lhh", "hlh", "hhl");
691:     @probspatial = (0.10, 0.30, 0.30, 0.30);
694:     @severe = ("hlh", "hhl", "llh", "lhl");
695:     @probspatial = (0.25, 0.25, 0.25, 0.25);
698:     @severe = ("llh", "lhl", "hll", "lll");
699:     @probspatial = (0.30, 0.30, 0.30, 0.10);
706:     @severe = ("hhh", "lhh", "hlh", "hhl", "llh", "lhl", "hll", "lll");
715:# 	@severity = (LLL, HLL, LHL, LLH), (LHL, LLH, LHH, HLH), (LHH, HLH, HHL, HHH)
734:         @args = ("wepp <$WEPPresponseFilePath >$stoutFile");
737:        @args = ("nice -20 ../wepp <$WEPPresponsePath >$stoutFile 2>$sterrFile");
739:#      print TEMP "@args\n";
740:       system @args;
744:       @seds = &get_event_seds;
748:         @args = ("copy $ev_by_evPath $severity_event_path");	# TEMP DEH
749:         system @args;						# TEMP DEH
757:         $sedtable[$i][$k][$sn] = @seds[$i];
758:         if ($debug) {print TEMP "\t",@day[$i],"\t",@month[$i],"\t",@selected_year[$i],"\t",@seds[$i],"\n";}
774:    print TEMP '  <tr><th align="left" bgcolor="gold" colspan="5">',@day[$c],' ',@monthnames[@month[$c]],' year ',@selected_year[$c],' (',@probClimate[$c]*100,'%)</th><td></td></tr>',"\n";
780:        @sed_yields[$sp] = $sedtable[$c][$k][$sn];
781:        @probabilities0[$sp] = @probClimate[$c] * @probspatial[$sn] * @probSoil0[$k];
782:        @probabilities1[$sp] = @probClimate[$c] * @probspatial[$sn] * @probSoil1[$k];
783:        @probabilities2[$sp] = @probClimate[$c] * @probspatial[$sn] * @probSoil2[$k];
784:        @probabilities3[$sp] = @probClimate[$c] * @probspatial[$sn] * @probSoil3[$k];
785:        @probabilities4[$sp] = @probClimate[$c] * @probspatial[$sn] * @probSoil4[$k];
786:        print TEMP '<td align="right">',@sed_yields[$sp],'</td>';
789:      print TEMP '<td bgcolor="gold">',@severe[$sn],' (', @probspatial[$sn]*100, "%)</td></tr>\n";
827:# index sort @sed_yields decreasing
828:#   print TEMP @sed_yields and @probabilities using same index and calculate cumulative probability
832:  @index = sort {$sed_yields[$b] <=> $sed_yields[$a]} 0..$#sed_yields;  # sort indices
833:#  @rank[@index] = 0..$#sed_yields;                    # make rank
842:    $cum_prob0 += @probabilities0[@index[$sp]];
843:    $cum_prob1 += @probabilities1[@index[$sp]];
844:    $cum_prob2 += @probabilities2[@index[$sp]];
845:    $cum_prob3 += @probabilities3[@index[$sp]];
846:    $cum_prob4 += @probabilities4[@index[$sp]];
847:    if ($debug) {print TEMP @sed_yields[@index[$sp]],"\t",@probabilities0[@index[$sp]],"\t$cum_prob0\t$cum_prob1\t$cum_prob2\t$cum_prob3\t$cum_prob4\n";}
848:#    print TEMP @sed_yields[@index[$sp]],"\t",@probabilities0[@index[$sp]],"\t$cum_prob0\t",,"\t",@probabilities1[@index[$sp]],"\t$cum_prob1\n";
852:#  @sorted_sed_probs = sort { $a <=> $b } @sed_probs;	# sort numerically increasing
854:#    print TEMP @sorted_sed_probs[$sp], ' ';
1271:  # @month
1272:  # @day
1273:  # @selected_year
1299:  my @idx_for_year;
1300:  my @days;
1301:  my @months;
1302:  my @years;
1303:  my @sed_dels;
1304:  my @seds;
1309:  $min_year = @years2run[0];
1311:#    if ((@selected_year[$i]+0) < $min_year) {$min_year = @selected_year[$i]}
1326:    @idx_for_year[$yr] = $counter if (@idx_for_year[$yr] eq '');
1327:    @days[$counter] = $da;
1328:    @months[$counter] = $mo;
1329:    @years[$counter] = $yr;
1330:    @sed_dels[$counter] = $seddel;
1341:#   print TEMP $i,'  ',@idx_for_year[$i],"\n" if ($idx_for_year[$i] ne '')
1345:#    if ($debug) {print TEMP 'Looking for day ' , @day[$i], ' month ' ,@month[$i], ' year ' , @selected_year[$i];}
1346:    $start_index = @idx_for_year[@selected_year[$i]];
1347:#    $end_index = @idx_for_year[@selected_year[$i]+1];
1351:#      if ($debug) {print TEMP '   comparing ', @days[$j],' to ',@day[$i],' and ',$months[$j],' to ',@month[$i],' and ',$years[$j],' to ',@selected_year[$i],"\n";}
1352:      if (@days[$j] == @day[$i] && $months[$j] == @month[$i] && $years[$j] == @selected_year[$i]) {
1354:        @seds[$i] = @sed_dels[$j];
1357:     last if (($months[$j]+0) > (@month[$i]+0));
1360:  return @seds;
1367:   @filetext=<INININ>;
1369:   @filetext
1413:#      @args = ("..\\rc\\cligen43.exe <$rspfile >$stoutfile");
1414:       @args = ("cligen43.exe <$crspfile >$cstoutfile");
1417:#      @args = ("nice -20 ../rc/cligen43 <$rspfile >$stoutfile");
1418:       @args = ("../rc/cligen43 <$crspfile >$cstoutfile");
1448:   system @args;
1597:                                              @sypline = split ' ',$_;
1598:                                              $syp = @sypline[0];
1644:    $cum_prob0 += @probabilities0[@index[$i]];
1645:    $cum_prob1 += @probabilities1[@index[$i]];
1646:    $cum_prob2 += @probabilities2[@index[$i]];
1647:    $cum_prob3 += @probabilities3[@index[$i]];
1648:    $cum_prob4 += @probabilities4[@index[$i]];
1650:    $sedval = @sed_yields[@index[$i]];
1886:# "Selector, Lev Y" <Lev.Selector@gs.com>
1950:    @l[0] = "300000\t0.0003\t2\t48";
1951:    @l[1] = "500000\t0.00034\t2\t46";
1952:    @l[2] = "700000\t0.00037\t2\t44";
1953:    @l[3] = "1000000\t0.0004\t2\t24";
1954:    @l[4] = "1200000\t0.00045\t2\t14";
1955:    @h[0] = "1000000\t0.0004\t2\t22";
1956:    @h[1] = "1500000\t0.0005\t2\t13";
1957:    @h[2] = "2000000\t0.0006\t2\t7";
1958:    @h[3] = "2500000\t0.0007\t2\t6";
1959:    @h[4] = "3000000\t0.001\t2\t5";
1967:    @l[0] = "250000\t0.0002\t3.5\t33";
1968:    @l[1] = "300000\t0.00024\t3.5\t31";
1969:    @l[2] = "400000\t0.00027\t3.5\t29";
1970:    @l[3] = "500000\t0.0003\t3.5\t19";
1971:    @l[4] = "600000\t0.00035\t3.5\t9";
1972:    @h[0] = "500000\t0.0003\t3.5\t18";
1973:    @h[1] = "1000000\t0.0004\t3.5\t10";
1974:    @h[2] = "1500000\t0.0005\t3.5\t6";
1975:    @h[3] = "2000000\t0.0006\t3.5\t4";
1976:    @h[4] = "2500000\t0.0009\t3.5\t3";
1984:    @l[0] = "200000\t0.0001\t4\t25";
1985:    @l[1] = "250000\t0.00014\t4\t24";
1986:    @l[2] = "300000\t0.00017\t4\t23";
1987:    @l[3] = "400000\t0.0002\t4\t14";
1988:    @l[4] = "500000\t0.00025\t4\t8";
1989:    @h[0] = "400000\t0.0002\t4\t13";
1990:    @h[1] = "700000\t0.0003\t4\t7";
1991:    @h[2] = "1000000\t0.0004\t4\t4";
1992:    @h[3] = "1500000\t0.0005\t4\t3";
1993:    @h[4] = "2000000\t0.0008\t4\t2";
2001:    @l[0] = "320000\t0.00015\t3\t40";
2002:    @l[1] = "370000\t0.00019\t3\t38";
2003:    @l[2] = "470000\t0.00022\t3\t36";
2004:    @l[3] = "600000\t0.00025\t3\t28";
2005:    @l[4] = "800000\t0.0003\t3\t18";
2006:    @h[0] = "600000\t0.00025\t3\t27";
2007:    @h[1] = "800000\t0.00035\t3\t15";
2008:    @h[2] = "1200000\t0.00055\t3\t8";
2009:    @h[3] = "2200000\t0.00065\t3\t5";
2010:    @h[4] = "3200000\t0.00085\t3\t4";
2026:        $KiKrShcritAvke = @l[$k]
2029:        $KiKrShcritAvke = @h[$k]
2047:# one key=value in each member of the list "@in"
2051:   local (*in) = @_ if @_;
2060:   @in = split(/&/,$in);
